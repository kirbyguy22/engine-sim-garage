import "engine_sim.mr"
import "../../part-library/part_library.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)
label cycle90( 90 * units.deg)
label cycle68( 68 * units.deg)
label cycle144( 144 * units.deg)
label ign_offset(10)

public node porsche_v10_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 6000 * units.rpm;
	input limiter_duration: 0.05;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: limiter_duration)
            .connect_wire(wires.wire1, 0)
            .connect_wire(wires.wire2, cycle68)
            .connect_wire(wires.wire9, 1 * cycle144)
            .connect_wire(wires.wire10, 1 * cycle144 + cycle68)
            .connect_wire(wires.wire3, 2 * cycle144)
            .connect_wire(wires.wire4, 2 * cycle144 + cycle68)
            .connect_wire(wires.wire5, 3 * cycle144)
            .connect_wire(wires.wire6, 3 * cycle144 + cycle68)
            .connect_wire(wires.wire7, 4 * cycle144)
            .connect_wire(wires.wire8, 4 * cycle144 + cycle68);
}


public node porsche_v10_lobe_in_profile {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 230 * units.deg,
            gamma: 0.8,
            lift: 542 * units.thou,
            steps: 100
        );
}

public node porsche_v10_lobe_ex_profile {
    alias output __out:
        harmonic_cam_lobe(
            duration_at_50_thou: 238 * units.deg,
            gamma: 0.8,
            lift: 542 * units.thou,
            steps: 100
        );
}

public node porsche_v10_camshaft_builder {
    input lobe_profile: porsche_v10_lobe_in_profile();
	input lobe_profile_ex: porsche_v10_lobe_ex_profile();
    input intake_lobe_profile: lobe_profile;
    input exhaust_lobe_profile: lobe_profile_ex;
    input lobe_separation: 114.0 * units.deg;
    input intake_lobe_center: lobe_separation;
    input exhaust_lobe_center: lobe_separation;
    input advance: 0.0 * units.deg;
    input base_radius: 0.75 * units.inch;

    output intake_cam_0: _intake_cam_0;
	output intake_cam_1: _intake_cam_1;
    output exhaust_cam_0: _exhaust_cam_0;
	output exhaust_cam_1: _exhaust_cam_1;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam_0(params, lobe_profile: intake_lobe_profile)
	camshaft _intake_cam_1(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam_0(params, lobe_profile: exhaust_lobe_profile)
	camshaft _exhaust_cam_1(params, lobe_profile: exhaust_lobe_profile)

    label rot90(90 * units.deg)
	label rot68(68* units.deg)
	label rot144(144 * units.deg)
    label rot360(360 * units.deg)

    _exhaust_cam_0
        .add_lobe(rot360 - exhaust_lobe_center)
		.add_lobe(rot360 - exhaust_lobe_center + 2 * rot144)
		.add_lobe(rot360 - exhaust_lobe_center + 3 * rot144)
        .add_lobe(rot360 - exhaust_lobe_center + 4 * rot144)
		.add_lobe(rot360 - exhaust_lobe_center + 1 * rot144)
		
    _exhaust_cam_1
        .add_lobe(rot360 - exhaust_lobe_center + 1 * rot68)
        .add_lobe(rot360 - exhaust_lobe_center + 2 * rot144 + rot68)
        .add_lobe(rot360 - exhaust_lobe_center + 3 * rot144 + rot68)
        .add_lobe(rot360 - exhaust_lobe_center + 4 * rot144 + rot68)
        .add_lobe(rot360 - exhaust_lobe_center + 1 * rot144 + rot68)

    _intake_cam_0
        .add_lobe(rot360 + intake_lobe_center)
        .add_lobe(rot360 + intake_lobe_center + 2 * rot144)
        .add_lobe(rot360 + intake_lobe_center + 3 * rot144)
        .add_lobe(rot360 + intake_lobe_center + 4 * rot144)
        .add_lobe(rot360 + intake_lobe_center + 1 * rot144)
		
    _intake_cam_1
        .add_lobe(rot360 + intake_lobe_center + 1 * rot68)
        .add_lobe(rot360 + intake_lobe_center + 2 * rot144 + rot68)
        .add_lobe(rot360 + intake_lobe_center + 3 * rot144 + rot68)
        .add_lobe(rot360 + intake_lobe_center + 4 * rot144 + rot68)
        .add_lobe(rot360 + intake_lobe_center + 1 * rot144 + rot68)
}

public node porsche_v10_camshaft {
    alias output __out:
        porsche_v10_camshaft_builder(
            advance: 0 * units.deg,
            intake_lobe_center: 110 * units.deg,
            exhaust_lobe_center: 110 * units.deg);
}

public node v10_high_intake {
    input carburetor_cfm: 650.0;
    input idle_flow_rate_cfm: 1.0;
    input idle_throttle_plate_position: 0.975;
    input throttle_gamma: 2.0;

    alias output __out: intake;

    intake intake(
        plenum_volume: 5.0 * units.L,
        plenum_cross_section_area: 100.0 * units.cm2,
        intake_flow_rate: k_carb(carburetor_cfm),
        idle_flow_rate: k_carb(idle_flow_rate_cfm),
        idle_throttle_plate_position: idle_throttle_plate_position,
        throttle_gamma: throttle_gamma,
        runner_flow_rate: k_carb(1000.0),
        runner_length: 4.0 * units.inch,
        velocity_decay: 0.1
    )
}


private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
    output wire7: ignition_wire();
    output wire8: ignition_wire();
    output wire9: ignition_wire();
    output wire10: ignition_wire();
}

public node porsche_980_01 {
    alias output __out: engine;

    engine engine(
        name: "Porsche 980/01",
        starter_torque: 200 * units.lb_ft,
        starter_speed: 200 * units.rpm,
        redline: 8400 * units.rpm
    )

    wires wires()

    crankshaft c0(
        throw: 76 * units.mm / 2,
        flywheel_mass: 10 * 2 * units.lb,
        mass: 55 * units.lb,
        friction_torque: 10.0 * units.lb_ft,
        moment_of_inertia: 0.22986844776863666 * 0.75,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 124*units.deg
    )

    rod_journal rj0(angle: 0)
	rod_journal rj2(angle: 2 * cycle144)
    rod_journal rj4(angle: 3 * cycle144)
	rod_journal rj6(angle: 4 * cycle144)
	rod_journal rj8(angle: 1 * cycle144)
	
    c0
        .add_rod_journal(rj0)
		.add_rod_journal(rj2)
        .add_rod_journal(rj4)
		.add_rod_journal(rj6)
		.add_rod_journal(rj8)

    piston_parameters piston_params(
        mass: 400 * units.g,
        //blowby: k_28inH2O(0.05),
        compression_height: 1.22 * units.inch,
        wrist_pin_position: 0.0,
        displacement: 0.0
    )

    connecting_rod_parameters cr_params(
        mass: 450.0 * units.g,
        moment_of_inertia: 0.0015884918028487504,
        center_of_mass: 0.0,
        length: 6.123 * units.inch
    )

    cylinder_bank_parameters bank_params(
        bore: 98 * units.mm,
        deck_height: (6.123 + 1.22) * units.inch + 76 * units.mm / 2
    )

    v10_high_intake intake(
        carburetor_cfm: 1500.0,
        idle_flow_rate_cfm: 0.007,
        idle_throttle_plate_position: 0.998,
        throttle_gamma: 1.5
    )

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(1500.0),
        primary_tube_length: 10.0 * units.inch,
        primary_flow_rate: k_carb(650.0),
        velocity_decay: 1.0, //0.5
        volume: 50.0 * units.L
    )
	
    exhaust_system exhaust0(es_params, audio_volume: 8.0, impulse_response: ir_lib.default_0)
	exhaust_system exhaust1(es_params, audio_volume: 10.0, impulse_response: ir_lib.default_0)

    cylinder_bank b0(bank_params, angle: 34 * units.deg)
    b0
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire1
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire3
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire5
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj6,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire7
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj8,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire9
        )
		
    cylinder_bank b1(bank_params, angle: -34 * units.deg)
    b1
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire2
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire4
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire6
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj6,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire8
        )
		.add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.05)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj8,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire10
        )

    engine
		.add_cylinder_bank(b1)
        .add_cylinder_bank(b0)

	engine.add_crankshaft(c0)
	
    porsche_v10_camshaft camshaft()

    b0.set_cylinder_head (
        generic_small_engine_head(
            chamber_volume: 47.775 * units.cc,
            intake_camshaft: camshaft.intake_cam_0,
            exhaust_camshaft: camshaft.exhaust_cam_0
        )
    )
	
    b1.set_cylinder_head (
        generic_small_engine_head(
            chamber_volume: 47.775 * units.cc,
            intake_camshaft: camshaft.intake_cam_1,
            exhaust_camshaft: camshaft.exhaust_cam_1,
			flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, (20 + ign_offset) * units.deg)
        .add_sample(1000 * units.rpm, (20 + ign_offset) * units.deg)
        .add_sample(2000 * units.rpm, (30 + ign_offset) * units.deg)
        .add_sample(3000 * units.rpm, (37 + ign_offset) * units.deg)
        .add_sample(4000 * units.rpm, (46 + ign_offset) * units.deg)
        .add_sample(5000 * units.rpm, (50 + ign_offset) * units.deg)
        .add_sample(6000 * units.rpm, (55 + ign_offset) * units.deg)
        .add_sample(7000 * units.rpm, (55 + ign_offset) * units.deg)
		.add_sample(8000 * units.rpm, (55 + ign_offset) * units.deg)

    engine.add_ignition_module(
        porsche_v10_distributor(
            wires: wires,
            timing_curve: timing_curve,
            rev_limit: 8400 * units.rpm,
			limiter_duration: 0.05
        ))
}
